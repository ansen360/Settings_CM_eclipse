/* AUTO-GENERATED FILE.  DO NOT MODIFY.
 *
 * This class was automatically generated by the
 * aapt tool from the resource data it found.  It
 * should not be modified by hand.
 */

package com.android.settingslib;

public final class R {
    public static final class array {
        /**  Wi-Fi settings. The status messages when the network is unknown. 
 Wi-Fi settings 
 Match this with the order of NetworkInfo.DetailedState. 
 Wi-Fi settings. The status messages when the network is unknown. 
 Wi-Fi settings 
 Match this with the order of NetworkInfo.DetailedState. 
 Wi-Fi settings. The status messages when the network is unknown. 
 Wi-Fi settings 
 Match this with the order of NetworkInfo.DetailedState. 
 Wi-Fi settings. The status messages when the network is unknown. 
 Wi-Fi settings 
 Match this with the order of NetworkInfo.DetailedState. 
 Wi-Fi settings. The status messages when the network is unknown. 
         */
        public static int wifi_status=0x7f040000;
        /**  Wi-Fi settings. The status messages when the network is known. 
 Match this with the order of NetworkInfo.DetailedState. 
 Wi-Fi settings. The status messages when the network is known. 
 Match this with the order of NetworkInfo.DetailedState. 
 Wi-Fi settings. The status messages when the network is known. 
         */
        public static int wifi_status_with_ssid=0x7f040001;
    }
    public static final class attr {
    }
    public static final class dimen {
        /**  The y translation to apply at the start in appear animations. 
         */
        public static int appear_y_translation_start=0x7f050001;
        public static int circle_avatar_size=0x7f050003;
        /**  The translation for disappearing security views after having solved them. 
         */
        public static int disappear_y_translation=0x7f050002;
        public static int shortcut_picker_left_padding=0x7f050000;
    }
    public static final class drawable {
        public static int activities_icon=0x7f020000;
        public static int ic_bt_cellphone=0x7f020001;
        public static int ic_bt_headphones_a2dp=0x7f020002;
        public static int ic_bt_headset_hfp=0x7f020003;
        public static int ic_bt_misc_hid=0x7f020004;
        public static int ic_bt_network_pan=0x7f020005;
        public static int ic_bt_pointing_hid=0x7f020006;
        public static int ic_lockscreen_ime=0x7f020007;
    }
    public static final class string {
        /**  Content description of the WIFI signal when no signal for accessibility (not shown on the screen). [CHAR LIMIT=NONE] 
 Content description of the WIFI signal when no signal for accessibility (not shown on the screen). [CHAR LIMIT=NONE] 
         */
        public static int accessibility_no_wifi=0x7f060051;
        /**  Content description of the WIFI signal when WIFI is disabled for accessibility (not shown on the screen). [CHAR LIMIT=NONE] 
 Content description of the WIFI signal when WIFI is disabled for accessibility (not shown on the screen). [CHAR LIMIT=NONE] 
         */
        public static int accessibility_wifi_off=0x7f060050;
        /**  Content description of the WIFI signal when it is one bar for accessibility (not shown on the screen). [CHAR LIMIT=NONE] 
 Content description of the WIFI signal when it is one bar for accessibility (not shown on the screen). [CHAR LIMIT=NONE] 
         */
        public static int accessibility_wifi_one_bar=0x7f060052;
        /**  Content description of the WIFI signal when it is full for accessibility (not shown on the screen). [CHAR LIMIT=NONE] 
 Content description of the WIFI signal when it is full for accessibility (not shown on the screen). [CHAR LIMIT=NONE] 
         */
        public static int accessibility_wifi_signal_full=0x7f060055;
        /**  Content description of the WIFI signal when it is three bars for accessibility (not shown on the screen). [CHAR LIMIT=NONE] 
 Content description of the WIFI signal when it is three bars for accessibility (not shown on the screen). [CHAR LIMIT=NONE] 
         */
        public static int accessibility_wifi_three_bars=0x7f060054;
        /**  Content description of the WIFI signal when it is two bars for accessibility (not shown on the screen). [CHAR LIMIT=NONE] 
 Content description of the WIFI signal when it is two bars for accessibility (not shown on the screen). [CHAR LIMIT=NONE] 
         */
        public static int accessibility_wifi_two_bars=0x7f060053;
        /**  Status message of Wi-Fi when network has matching passpoint credentials. [CHAR LIMIT=NONE] 
 Status message of Wi-Fi when network has matching passpoint credentials. [CHAR LIMIT=NONE] 
         */
        public static int available_via_passpoint=0x7f06001e;
        /**  Bluetooth settings.  Connection options screen.  The summary for the A2DP checkbox preference when A2DP is connected. 
 Bluetooth settings.  Connection options screen.  The summary for the A2DP checkbox preference when A2DP is connected. 
         */
        public static int bluetooth_a2dp_profile_summary_connected=0x7f060036;
        /**  Bluetooth settings.  Connection options screen.  The summary for the A2DP checkbox preference that describes how checking it will set the A2DP profile as preferred. 
 Bluetooth settings.  Connection options screen.  The summary for the A2DP checkbox preference that describes how checking it will set the A2DP profile as preferred. 
         */
        public static int bluetooth_a2dp_profile_summary_use_for=0x7f060043;
        /**  Bluetooth settings.  Message when connected to a device. [CHAR LIMIT=40] 
 Bluetooth settings.  Message when disconnecting from a device 
 Bluetooth settings.  Message when connecting to a device 
 Bluetooth settings.  Message when connected to a device. [CHAR LIMIT=40] 
 Bluetooth settings.  Message when connected to a device. [CHAR LIMIT=40] 
         */
        public static int bluetooth_connected=0x7f060025;
        /**  Bluetooth settings.  Message when connected to a device, except for media audio. [CHAR LIMIT=40] 
 Bluetooth settings.  Message when connected to a device, except for media audio. [CHAR LIMIT=40] 
         */
        public static int bluetooth_connected_no_a2dp=0x7f060028;
        /**  Bluetooth settings.  Message when connected to a device, except for phone audio. [CHAR LIMIT=40] 
 Bluetooth settings.  Message when connected to a device, except for phone audio. [CHAR LIMIT=40] 
         */
        public static int bluetooth_connected_no_headset=0x7f060027;
        /**  Bluetooth settings.  Message when connected to a device, except for phone/media audio. [CHAR LIMIT=40] 
 Bluetooth settings.  Message when connected to a device, except for phone/media audio. [CHAR LIMIT=40] 
         */
        public static int bluetooth_connected_no_headset_no_a2dp=0x7f06002a;
        /**  Bluetooth settings.  Message when connected to a device, except for map. [CHAR LIMIT=40] 
 Bluetooth settings.  Message when connected to a device, except for map. [CHAR LIMIT=40] 
         */
        public static int bluetooth_connected_no_map=0x7f060029;
        /**  Bluetooth settings.  Message when connecting to a device 
 Bluetooth settings.  Message when connecting to a device 
         */
        public static int bluetooth_connecting=0x7f060024;
        /**  Bluetooth settings.  Message when a device is disconnected 
 Status for networks disabled for unknown reason 
 Status for networked disabled from a DNS or DHCP failure 
 Status for networked disabled from a wifi association failure 
 Status for networks disabled from authentication failure (wrong password
         or certificate). 
 Summary for the remembered network but currently not in range. 
 Summary for the remembered network but no internet connection was detected. 
 Summary for saved networks 
 Status message of Wi-Fi when it is connected by a Wi-Fi assistant application. [CHAR LIMIT=NONE] 
 Status message of Wi-Fi when it is connected by Passpoint configuration. [CHAR LIMIT=NONE] 
 Status message of Wi-Fi when network has matching passpoint credentials. [CHAR LIMIT=NONE] 
 Package name for Settings app
 Package name for Certinstaller app
 Summary for Connected wifi network without internet 
 Bluetooth settings.  Message when a device is disconnected 
 Bluetooth settings.  Message when a device is disconnected 
         */
        public static int bluetooth_disconnected=0x7f060022;
        /**  Bluetooth settings.  Message when disconnecting from a device 
 Bluetooth settings.  Message when disconnecting from a device 
         */
        public static int bluetooth_disconnecting=0x7f060023;
        /**  Bluetooth settings.  Connection options screen.  The summary for the DUN checkbox preference when DUN is connected. 
 Bluetooth settings.  Connection options screen.  The summary for the DUN checkbox preference when DUN is connected. 
         */
        public static int bluetooth_dun_profile_summary_connected=0x7f06003f;
        /**  Bluetooth settings. Connection options screen.  The summary for the dun checkbox preference that describes how checking it will set the dun profile as preferred. 
 Bluetooth settings. Connection options screen.  The summary for the dun checkbox preference that describes how checking it will set the dun profile as preferred. 
         */
        public static int bluetooth_dun_profile_summary_use_for=0x7f060047;
        /**  Bluetooth settings.  Connection options screen.  The summary for the headset checkbox preference when headset is connected. 
 Bluetooth settings.  Connection options screen.  The summary for the headset checkbox preference when headset is connected. 
         */
        public static int bluetooth_headset_profile_summary_connected=0x7f060037;
        /**  Bluetooth settings.  Connection options screen.  The summary for the headset checkbox preference that describes how checking it will set the headset profile as preferred. 
 Bluetooth settings.  Connection options screen.  The summary for the headset checkbox preference that describes how checking it will set the headset profile as preferred. 
         */
        public static int bluetooth_headset_profile_summary_use_for=0x7f060044;
        /**  Bluetooth settings. Connection options screen. The summary for the HID checkbox preference when HID is connected. 
 Bluetooth settings. Connection options screen. The summary for the HID checkbox preference when HID is connected. 
         */
        public static int bluetooth_hid_profile_summary_connected=0x7f06003c;
        /**  Bluetooth settings. Connection options screen. The summary
         for the HID checkbox preference that describes how checking it
         will set the HID profile as preferred. 
 Bluetooth settings. Connection options screen. The summary
         for the HID checkbox preference that describes how checking it
         will set the HID profile as preferred. 
         */
        public static int bluetooth_hid_profile_summary_use_for=0x7f060046;
        /**  Bluetooth settings.  Connection options screen.  The summary for the map checkbox preference when map is connected. 
 Bluetooth settings.  Connection options screen.  The summary for the map checkbox preference when map is connected. 
         */
        public static int bluetooth_map_profile_summary_connected=0x7f060039;
        /**  Bluetooth settings. Connection options screen.  The summary for the map checkbox preference that describes how checking it will set the map profile as preferred. 
 Bluetooth settings. Connection options screen.  The summary for the map checkbox preference that describes how checking it will set the map profile as preferred. 
         */
        public static int bluetooth_map_profile_summary_use_for=0x7f060041;
        /**  Bluetooth settings.  Connection options screen.  The summary for the OPP checkbox preference when OPP is connected. 
 Bluetooth settings.  Connection options screen.  The summary for the OPP checkbox preference when OPP is connected. 
         */
        public static int bluetooth_opp_profile_summary_connected=0x7f060038;
        /**  Bluetooth settings.  Connection options screen.  The summary for the OPP checkbox preference when OPP is not connected. 
 Bluetooth settings.  Connection options screen.  The summary for the OPP checkbox preference when OPP is not connected. 
         */
        public static int bluetooth_opp_profile_summary_not_connected=0x7f06003b;
        /**  Bluetooth settings.  Connection options screen.  The summary for the OPP checkbox preference that describes how checking it will set the OPP profile as preferred. 
 Bluetooth settings.  Connection options screen.  The summary for the OPP checkbox preference that describes how checking it will set the OPP profile as preferred. 
         */
        public static int bluetooth_opp_profile_summary_use_for=0x7f060045;
        /** Bluetooth settings screen, summary text under individual Bluetooth devices when pairing 
Bluetooth settings screen, summary text under individual Bluetooth devices when pairing 
         */
        public static int bluetooth_pairing=0x7f060026;
        /**  Button text for accepting an incoming pairing request. [CHAR LIMIT=20] 
 Button text for accepting an incoming pairing request. [CHAR LIMIT=20] 
         */
        public static int bluetooth_pairing_accept=0x7f060048;
        /**  Button text for accepting an incoming pairing request in all caps. [CHAR LIMIT=20] 
 Button text for accepting an incoming pairing request in all caps. [CHAR LIMIT=20] 
         */
        public static int bluetooth_pairing_accept_all_caps=0x7f060049;
        /**  Button text for declining an incoming pairing request. [CHAR LIMIT=20] 
 Do not translate.  Terminology for wifi with unknown PSK type 
 Do not translate.  Concise terminology for wifi with 802.1x EAP security 
 Do not translate.  Concise terminology for Passpoint network 
 Summary for the remembered network. 
 Status for networks disabled for unknown reason 
 Status for networked disabled from a DNS or DHCP failure 
 Status for networked disabled from a wifi association failure 
 Status for networks disabled from authentication failure (wrong password
         or certificate). 
 Summary for the remembered network but currently not in range. 
 Summary for the remembered network but no internet connection was detected. 
 Summary for saved networks 
 Status message of Wi-Fi when it is connected by a Wi-Fi assistant application. [CHAR LIMIT=NONE] 
 Status message of Wi-Fi when it is connected by Passpoint configuration. [CHAR LIMIT=NONE] 
 Status message of Wi-Fi when network has matching passpoint credentials. [CHAR LIMIT=NONE] 
 Package name for Settings app
 Package name for Certinstaller app
 Summary for Connected wifi network without internet 
 Bluetooth settings.  Message when a device is disconnected 
 Bluetooth settings.  Message when disconnecting from a device 
 Bluetooth settings.  Message when connecting to a device 
 Bluetooth settings.  Message when connected to a device. [CHAR LIMIT=40] 
Bluetooth settings screen, summary text under individual Bluetooth devices when pairing 
 Bluetooth settings.  Message when connected to a device, except for phone audio. [CHAR LIMIT=40] 
 Bluetooth settings.  Message when connected to a device, except for media audio. [CHAR LIMIT=40] 
 Bluetooth settings.  Message when connected to a device, except for map. [CHAR LIMIT=40] 
 Bluetooth settings.  Message when connected to a device, except for phone/media audio. [CHAR LIMIT=40] 
 Bluetooth settings.  The user-visible string that is used whenever referring to the A2DP profile. 
 Bluetooth settings.  The user-visible string that is used whenever referring to the headset or handsfree profile. 
 Bluetooth settings.  The user-visible string that is used whenever referring to the OPP profile. 
 Bluetooth settings. The user-visible string that is used whenever referring to the HID profile. 
 Bluetooth settings. The user-visible string that is used whenever referring to the PAN profile (accessing Internet through remote device). [CHAR LIMIT=40] 
 Bluetooth settings. The user-visible string that is used whenever referring to the PBAP profile. [CHAR LIMIT=40] 
 Bluetooth settings. The user-visible summary string that is used whenever referring to the PBAP profile (sharing contacts). [CHAR LIMIT=60] 
 Bluetooth settings. The user-visible string that is used whenever referring to the PAN profile (sharing this device's Internet connection). [CHAR LIMIT=40] 
 Bluetooth settings. The user-visible string that is used whenever referring to the map profile. 
 Bluetooth settings. The user-visible string that is used whenever referring to the SAP profile (sharing SIM card). 
 Bluetooth settings. The user-visible string that is used whenever referring to the dun profile. 
 Bluetooth settings.  Connection options screen.  The summary for the A2DP checkbox preference when A2DP is connected. 
 Bluetooth settings.  Connection options screen.  The summary for the headset checkbox preference when headset is connected. 
 Bluetooth settings.  Connection options screen.  The summary for the OPP checkbox preference when OPP is connected. 
 Bluetooth settings.  Connection options screen.  The summary for the map checkbox preference when map is connected. 
 Bluetooth settings.  Connection options screen.  The summary for the sap checkbox preference when SAP is connected. 
 Bluetooth settings.  Connection options screen.  The summary for the OPP checkbox preference when OPP is not connected. 
 Bluetooth settings. Connection options screen. The summary for the HID checkbox preference when HID is connected. 
 Bluetooth settings. Connection options screen. The summary for the checkbox preference when PAN is connected (user role). [CHAR LIMIT=25]
 Bluetooth settings. Connection options screen. The summary for the checkbox preference when PAN is connected (NAP role). [CHAR LIMIT=25]
 Bluetooth settings.  Connection options screen.  The summary for the DUN checkbox preference when DUN is connected. 
 Bluetooth settings. Connection options screen. The summary
         for the PAN checkbox preference that describes how checking it
         will set the PAN profile as preferred. 
 Bluetooth settings. Connection options screen.  The summary for the map checkbox preference that describes how checking it will set the map profile as preferred. 
 Bluetooth settings.  Connection options screen.  The summary for the sap checkbox preference that describes how checking it will set the sap profile as preferred. 
 Bluetooth settings.  Connection options screen.  The summary for the A2DP checkbox preference that describes how checking it will set the A2DP profile as preferred. 
 Bluetooth settings.  Connection options screen.  The summary for the headset checkbox preference that describes how checking it will set the headset profile as preferred. 
 Bluetooth settings.  Connection options screen.  The summary for the OPP checkbox preference that describes how checking it will set the OPP profile as preferred. 
 Bluetooth settings. Connection options screen. The summary
         for the HID checkbox preference that describes how checking it
         will set the HID profile as preferred. 
 Bluetooth settings. Connection options screen.  The summary for the dun checkbox preference that describes how checking it will set the dun profile as preferred. 
 Button text for accepting an incoming pairing request. [CHAR LIMIT=20] 
 Button text for accepting an incoming pairing request in all caps. [CHAR LIMIT=20] 
 Button text for declining an incoming pairing request. [CHAR LIMIT=20] 
Bluetooth settings screen, summary text under individual Bluetooth devices when pairing 
 Bluetooth settings.  Message when connected to a device, except for phone audio. [CHAR LIMIT=40] 
 Bluetooth settings.  Message when connected to a device, except for media audio. [CHAR LIMIT=40] 
 Bluetooth settings.  Message when connected to a device, except for map. [CHAR LIMIT=40] 
 Bluetooth settings.  Message when connected to a device, except for phone/media audio. [CHAR LIMIT=40] 
 Bluetooth settings.  The user-visible string that is used whenever referring to the A2DP profile. 
 Bluetooth settings.  The user-visible string that is used whenever referring to the headset or handsfree profile. 
 Bluetooth settings.  The user-visible string that is used whenever referring to the OPP profile. 
 Bluetooth settings. The user-visible string that is used whenever referring to the HID profile. 
 Bluetooth settings. The user-visible string that is used whenever referring to the PAN profile (accessing Internet through remote device). [CHAR LIMIT=40] 
 Bluetooth settings. The user-visible string that is used whenever referring to the PBAP profile. [CHAR LIMIT=40] 
 Bluetooth settings. The user-visible summary string that is used whenever referring to the PBAP profile (sharing contacts). [CHAR LIMIT=60] 
 Bluetooth settings. The user-visible string that is used whenever referring to the PAN profile (sharing this device's Internet connection). [CHAR LIMIT=40] 
 Bluetooth settings. The user-visible string that is used whenever referring to the map profile. 
 Bluetooth settings. The user-visible string that is used whenever referring to the SAP profile (sharing SIM card). 
 Bluetooth settings. The user-visible string that is used whenever referring to the dun profile. 
 Bluetooth settings.  Connection options screen.  The summary for the A2DP checkbox preference when A2DP is connected. 
 Bluetooth settings.  Connection options screen.  The summary for the headset checkbox preference when headset is connected. 
 Bluetooth settings.  Connection options screen.  The summary for the OPP checkbox preference when OPP is connected. 
 Bluetooth settings.  Connection options screen.  The summary for the map checkbox preference when map is connected. 
 Bluetooth settings.  Connection options screen.  The summary for the sap checkbox preference when SAP is connected. 
 Bluetooth settings.  Connection options screen.  The summary for the OPP checkbox preference when OPP is not connected. 
 Bluetooth settings. Connection options screen. The summary for the HID checkbox preference when HID is connected. 
 Bluetooth settings. Connection options screen. The summary for the checkbox preference when PAN is connected (user role). [CHAR LIMIT=25]
 Bluetooth settings. Connection options screen. The summary for the checkbox preference when PAN is connected (NAP role). [CHAR LIMIT=25]
 Bluetooth settings.  Connection options screen.  The summary for the DUN checkbox preference when DUN is connected. 
 Bluetooth settings. Connection options screen. The summary
         for the PAN checkbox preference that describes how checking it
         will set the PAN profile as preferred. 
 Bluetooth settings. Connection options screen.  The summary for the map checkbox preference that describes how checking it will set the map profile as preferred. 
 Bluetooth settings.  Connection options screen.  The summary for the sap checkbox preference that describes how checking it will set the sap profile as preferred. 
 Bluetooth settings.  Connection options screen.  The summary for the A2DP checkbox preference that describes how checking it will set the A2DP profile as preferred. 
 Bluetooth settings.  Connection options screen.  The summary for the headset checkbox preference that describes how checking it will set the headset profile as preferred. 
 Bluetooth settings.  Connection options screen.  The summary for the OPP checkbox preference that describes how checking it will set the OPP profile as preferred. 
 Bluetooth settings. Connection options screen. The summary
         for the HID checkbox preference that describes how checking it
         will set the HID profile as preferred. 
 Bluetooth settings. Connection options screen.  The summary for the dun checkbox preference that describes how checking it will set the dun profile as preferred. 
 Button text for accepting an incoming pairing request. [CHAR LIMIT=20] 
 Button text for accepting an incoming pairing request in all caps. [CHAR LIMIT=20] 
 Button text for declining an incoming pairing request. [CHAR LIMIT=20] 
 Button text for declining an incoming pairing request. [CHAR LIMIT=20] 
         */
        public static int bluetooth_pairing_decline=0x7f06004a;
        /**  Message for the error dialog when BT pairing fails because the other device is down. 
 Message for the error dialog when BT pairing fails because the other device is down. 
         */
        public static int bluetooth_pairing_device_down_error_message=0x7f06004e;
        /**  Message for the error dialog when BT pairing fails generically. 
 Message for the error dialog when BT pairing fails generically. 
         */
        public static int bluetooth_pairing_error_message=0x7f06004c;
        /**  Message for the error dialog when BT pairing fails because the PIN /
    Passkey entered is incorrect. 
 Message for the error dialog when BT pairing fails because the PIN /
    Passkey entered is incorrect. 
         */
        public static int bluetooth_pairing_pin_error_message=0x7f06004d;
        /**  Message for the error dialog when BT pairing fails because the other device rejected the pairing. 
 Message for the error dialog when BT pairing fails because the other device rejected the pairing. 
         */
        public static int bluetooth_pairing_rejected_error_message=0x7f06004f;
        /**  Message in pairing dialogs.  [CHAR LIMIT=NONE] 
 Message in pairing dialogs.  [CHAR LIMIT=NONE] 
         */
        public static int bluetooth_pairing_will_share_phonebook=0x7f06004b;
        /**  Bluetooth settings. Connection options screen. The summary for the checkbox preference when PAN is connected (NAP role). [CHAR LIMIT=25]
 Bluetooth settings. Connection options screen. The summary for the checkbox preference when PAN is connected (NAP role). [CHAR LIMIT=25]
         */
        public static int bluetooth_pan_nap_profile_summary_connected=0x7f06003e;
        /**  Bluetooth settings. Connection options screen. The summary
         for the PAN checkbox preference that describes how checking it
         will set the PAN profile as preferred. 
 Bluetooth settings. Connection options screen. The summary
         for the PAN checkbox preference that describes how checking it
         will set the PAN profile as preferred. 
         */
        public static int bluetooth_pan_profile_summary_use_for=0x7f060040;
        /**  Bluetooth settings. Connection options screen. The summary for the checkbox preference when PAN is connected (user role). [CHAR LIMIT=25]
 Bluetooth settings. Connection options screen. The summary for the checkbox preference when PAN is connected (user role). [CHAR LIMIT=25]
         */
        public static int bluetooth_pan_user_profile_summary_connected=0x7f06003d;
        /**  Bluetooth settings.  The user-visible string that is used whenever referring to the A2DP profile. 
 Bluetooth settings.  The user-visible string that is used whenever referring to the A2DP profile. 
         */
        public static int bluetooth_profile_a2dp=0x7f06002b;
        /**  Bluetooth settings. The user-visible string that is used whenever referring to the dun profile. 
 Bluetooth settings. The user-visible string that is used whenever referring to the dun profile. 
         */
        public static int bluetooth_profile_dun=0x7f060035;
        /**  Bluetooth settings.  The user-visible string that is used whenever referring to the headset or handsfree profile. 
 Bluetooth settings.  The user-visible string that is used whenever referring to the headset or handsfree profile. 
         */
        public static int bluetooth_profile_headset=0x7f06002c;
        /**  Bluetooth settings. The user-visible string that is used whenever referring to the HID profile. 
 Bluetooth settings. The user-visible string that is used whenever referring to the HID profile. 
         */
        public static int bluetooth_profile_hid=0x7f06002e;
        /**  Bluetooth settings. The user-visible string that is used whenever referring to the map profile. 
 Bluetooth settings. The user-visible string that is used whenever referring to the map profile. 
         */
        public static int bluetooth_profile_map=0x7f060033;
        /**  Bluetooth settings.  The user-visible string that is used whenever referring to the OPP profile. 
 Bluetooth settings.  The user-visible string that is used whenever referring to the OPP profile. 
         */
        public static int bluetooth_profile_opp=0x7f06002d;
        /**  Bluetooth settings. The user-visible string that is used whenever referring to the PAN profile (accessing Internet through remote device). [CHAR LIMIT=40] 
 Bluetooth settings. The user-visible string that is used whenever referring to the PAN profile (accessing Internet through remote device). [CHAR LIMIT=40] 
         */
        public static int bluetooth_profile_pan=0x7f06002f;
        /**  Bluetooth settings. The user-visible string that is used whenever referring to the PAN profile (sharing this device's Internet connection). [CHAR LIMIT=40] 
 Bluetooth settings. The user-visible string that is used whenever referring to the PAN profile (sharing this device's Internet connection). [CHAR LIMIT=40] 
         */
        public static int bluetooth_profile_pan_nap=0x7f060032;
        /**  Bluetooth settings. The user-visible string that is used whenever referring to the PBAP profile. [CHAR LIMIT=40] 
 Bluetooth settings. The user-visible string that is used whenever referring to the PBAP profile. [CHAR LIMIT=40] 
         */
        public static int bluetooth_profile_pbap=0x7f060030;
        /**  Bluetooth settings. The user-visible summary string that is used whenever referring to the PBAP profile (sharing contacts). [CHAR LIMIT=60] 
 Bluetooth settings. The user-visible summary string that is used whenever referring to the PBAP profile (sharing contacts). [CHAR LIMIT=60] 
         */
        public static int bluetooth_profile_pbap_summary=0x7f060031;
        /**  Bluetooth settings. The user-visible string that is used whenever referring to the SAP profile (sharing SIM card). 
 Bluetooth settings. The user-visible string that is used whenever referring to the SAP profile (sharing SIM card). 
         */
        public static int bluetooth_profile_sap=0x7f060034;
        /**  Bluetooth settings.  Connection options screen.  The summary for the sap checkbox preference when SAP is connected. 
 Bluetooth settings.  Connection options screen.  The summary for the sap checkbox preference when SAP is connected. 
         */
        public static int bluetooth_sap_profile_summary_connected=0x7f06003a;
        /**  Bluetooth settings.  Connection options screen.  The summary for the sap checkbox preference that describes how checking it will set the sap profile as preferred. 
 Bluetooth settings.  Connection options screen.  The summary for the sap checkbox preference that describes how checking it will set the sap profile as preferred. 
         */
        public static int bluetooth_sap_profile_summary_use_for=0x7f060042;
        /**  Package name for Certinstaller app
         */
        public static int certinstaller_package=0x7f060020;
        /**  Status message of Wi-Fi when it is connected by Passpoint configuration. [CHAR LIMIT=NONE] 
 Status message of Wi-Fi when it is connected by Passpoint configuration. [CHAR LIMIT=NONE] 
         */
        public static int connected_via_passpoint=0x7f06001d;
        /**  Status message of Wi-Fi when it is connected by a Wi-Fi assistant application. [CHAR LIMIT=NONE] 
 Status message of Wi-Fi when it is connected by a Wi-Fi assistant application. [CHAR LIMIT=NONE] 
         */
        public static int connected_via_wfa=0x7f06001c;
        /**  Title of data usage item that represents all uninstalled applications. [CHAR LIMIT=48] 
 Message in pairing dialogs.  [CHAR LIMIT=NONE] 
 Message for the error dialog when BT pairing fails generically. 
 Message for the error dialog when BT pairing fails because the PIN /
    Passkey entered is incorrect. 
 Message for the error dialog when BT pairing fails because the other device is down. 
 Message for the error dialog when BT pairing fails because the other device rejected the pairing. 
 Content description of the WIFI signal when WIFI is disabled for accessibility (not shown on the screen). [CHAR LIMIT=NONE] 
 Content description of the WIFI signal when no signal for accessibility (not shown on the screen). [CHAR LIMIT=NONE] 
 Content description of the WIFI signal when it is one bar for accessibility (not shown on the screen). [CHAR LIMIT=NONE] 
 Content description of the WIFI signal when it is two bars for accessibility (not shown on the screen). [CHAR LIMIT=NONE] 
 Content description of the WIFI signal when it is three bars for accessibility (not shown on the screen). [CHAR LIMIT=NONE] 
 Content description of the WIFI signal when it is full for accessibility (not shown on the screen). [CHAR LIMIT=NONE] 
 Label for kernel threads in battery usage 
 Title of data usage item that represents all uninstalled applications. [CHAR LIMIT=48] 
 Title of data usage item that represents all uninstalled applications. [CHAR LIMIT=48] 
         */
        public static int data_usage_uninstalled_apps=0x7f060057;
        /**  Title of data usage item that represents all uninstalled applications or removed users. [CHAR LIMIT=48] 
 Title of data usage item that represents all uninstalled applications or removed users. [CHAR LIMIT=48] 
 Title of data usage item that represents all uninstalled applications or removed users. [CHAR LIMIT=48] 
         */
        public static int data_usage_uninstalled_apps_users=0x7f060058;
        public static int lockscreen_targets_message=0x7f060004;
        /**  Title for a work profile. [CHAR LIMIT=25] 
 Title for a work profile. [CHAR LIMIT=25] 
         */
        public static int managed_user_title=0x7f06005e;
        public static int picker_activities=0x7f060001;
        /**  Label for kernel threads in battery usage 
 Label for kernel threads in battery usage 
         */
        public static int process_kernel_label=0x7f060056;
        public static int profile_applist_title=0x7f060000;
        /**  [CHAR LIMIT=NONE] Label of a running process that represents another user 
 [CHAR LIMIT=NONE] Label of a running process that represents another user 
         */
        public static int running_process_item_user_label=0x7f060061;
        /**  Summary for saved networks 
 Summary for saved networks 
         */
        public static int saved_network=0x7f06001b;
        public static int select_custom_activity_title=0x7f060003;
        public static int select_custom_app_title=0x7f060002;
        /**  Package name for Settings app
         */
        public static int settings_package=0x7f06001f;
        /**  Tethering controls, item title to go into the tethering settings when USB, Bluetooth and Wifi tethering are available [CHAR LIMIT=25]
 Tethering controls, item title to go into the tethering settings when USB, Bluetooth and Wifi tethering are available [CHAR LIMIT=25]
         */
        public static int tether_settings_title_all=0x7f06005d;
        /**  Tethering controls, item title to go into the tethering settings when only Bluetooth tethering is available [CHAR LIMIT=25]
 Tethering controls, item title to go into the tethering settings when only Bluetooth tethering is available [CHAR LIMIT=25]
         */
        public static int tether_settings_title_bluetooth=0x7f06005b;
        /**  Tethering controls, item title to go into the tethering settings 
 Tethering controls, item title to go into the tethering settings when only USB tethering is available [CHAR LIMIT=25]
 Tethering controls, item title to go into the tethering settings 
 Tethering controls, item title to go into the tethering settings when only USB tethering is available [CHAR LIMIT=25]
         */
        public static int tether_settings_title_usb=0x7f060059;
        /**  Tethering controls, item title to go into the tethering settings when USB and Bluetooth tethering are available [CHAR LIMIT=25]
 Tethering controls, item title to go into the tethering settings when USB and Bluetooth tethering are available [CHAR LIMIT=25]
         */
        public static int tether_settings_title_usb_bluetooth=0x7f06005c;
        /**  Tethering controls, item title to go into the tethering settings when only Wifi tethering is available [CHAR LIMIT=25]
 Tethering controls, item title to go into the tethering settings when only Wifi tethering is available [CHAR LIMIT=25]
         */
        public static int tether_settings_title_wifi=0x7f06005a;
        /**  Manage apps, individual app screen, substituted for the application's label when the app's label CAN NOT be determined.
 Manage apps, individual app screen, substituted for the application's label when the app's label CAN NOT be determined.
         */
        public static int unknown=0x7f060060;
        /**  Title for Guest user [CHAR LIMIT=35] 
 Tethering controls, item title to go into the tethering settings 
 Tethering controls, item title to go into the tethering settings when only USB tethering is available [CHAR LIMIT=25]
 Tethering controls, item title to go into the tethering settings when only Wifi tethering is available [CHAR LIMIT=25]
 Tethering controls, item title to go into the tethering settings when only Bluetooth tethering is available [CHAR LIMIT=25]
 Tethering controls, item title to go into the tethering settings when USB and Bluetooth tethering are available [CHAR LIMIT=25]
 Tethering controls, item title to go into the tethering settings when USB, Bluetooth and Wifi tethering are available [CHAR LIMIT=25]
 Title for a work profile. [CHAR LIMIT=25] 
 Title for Guest user [CHAR LIMIT=35] 
 Title for Guest user [CHAR LIMIT=35] 
         */
        public static int user_guest=0x7f06005f;
        /**  Summary for Connected wifi network without internet 
 Package name for Settings app
 Package name for Certinstaller app
 Summary for Connected wifi network without internet 
         */
        public static int wifi_connected_no_internet=0x7f060021;
        /**  Status for networks disabled for unknown reason 
 Status for networks disabled for unknown reason 
         */
        public static int wifi_disabled_generic=0x7f060015;
        /**  Status for networked disabled from a DNS or DHCP failure 
 Status for networked disabled from a DNS or DHCP failure 
         */
        public static int wifi_disabled_network_failure=0x7f060016;
        /**  Status for networks disabled from authentication failure (wrong password
         or certificate). 
 Status for networks disabled from authentication failure (wrong password
         or certificate). 
         */
        public static int wifi_disabled_password_failure=0x7f060018;
        /**  Status for networked disabled from a wifi association failure 
 Status for networked disabled from a wifi association failure 
         */
        public static int wifi_disabled_wifi_failure=0x7f060017;
        /**  Toast message when Wi-Fi cannot scan for networks 
 Toast message when Wi-Fi cannot scan for networks 
 Toast message when Wi-Fi cannot scan for networks 
         */
        public static int wifi_fail_to_scan=0x7f060005;
        /**  Summary for the remembered network but no internet connection was detected. 
 Summary for the remembered network but no internet connection was detected. 
         */
        public static int wifi_no_internet=0x7f06001a;
        /**  Summary for the remembered network but currently not in range. 
 Summary for the remembered network but currently not in range. 
         */
        public static int wifi_not_in_range=0x7f060019;
        /**  Summary for the remembered network. 
 Toast message when Wi-Fi cannot scan for networks 
 Do not translate.  Concise terminology for wifi with WEP security 
 Do not translate.  Concise terminology for wifi with WPA security 
 Do not translate.  Concise terminology for wifi with WPA2 security 
 Do not translate.  Concise terminology for wifi with both WPA/WPA2 security 
 Do not translate.  Concise terminology for wifi with unknown PSK type 
 Do not translate.  Concise terminology for wifi with 802.1x EAP security 
 Used in Wi-Fi settings dialogs when Wi-Fi does not have any security. 
 Do not translate.  Terminology for wifi with WEP security 
 Do not translate.  Terminology for wifi with WPA security 
 Do not translate.  Terminology for wifi with WPA2 security 
 Do not translate.  Terminology for wifi with both WPA/WPA2 security, or unknown 
 Do not translate.  Terminology for wifi with unknown PSK type 
 Do not translate.  Concise terminology for wifi with 802.1x EAP security 
 Do not translate.  Concise terminology for Passpoint network 
 Summary for the remembered network. 
 Summary for the remembered network. 
         */
        public static int wifi_remembered=0x7f060014;
        /**  Do not translate.  Concise terminology for wifi with 802.1x EAP security 
 Do not translate.  Concise terminology for wifi with 802.1x EAP security 
         */
        public static int wifi_security_eap=0x7f060012;
        /**  Used in Wi-Fi settings dialogs when Wi-Fi does not have any security. 
 Used in Wi-Fi settings dialogs when Wi-Fi does not have any security. 
 Used in Wi-Fi settings dialogs when Wi-Fi does not have any security. 
 Used in Wi-Fi settings dialogs when Wi-Fi does not have any security. 
         */
        public static int wifi_security_none=0x7f06000c;
        /**  Do not translate.  Concise terminology for Passpoint network 
 Do not translate.  Concise terminology for Passpoint network 
         */
        public static int wifi_security_passpoint=0x7f060013;
        /**  Do not translate.  Terminology for wifi with unknown PSK type 
 Do not translate.  Terminology for wifi with unknown PSK type 
         */
        public static int wifi_security_psk_generic=0x7f060011;
        /**  Do not translate.  Concise terminology for wifi with 802.1x EAP security 
 Do not translate.  Concise terminology for wifi with unknown PSK type 
 Do not translate.  Concise terminology for wifi with 802.1x EAP security 
 Do not translate.  Concise terminology for wifi with 802.1x EAP security 
 Do not translate.  Concise terminology for wifi with 802.1x EAP security 
         */
        public static int wifi_security_short_eap=0x7f06000b;
        /**  Do not translate.  Concise terminology for wifi with unknown PSK type 
 Do not translate.  Concise terminology for wifi with unknown PSK type 
 Do not translate.  Concise terminology for wifi with unknown PSK type 
         */
        public static int wifi_security_short_psk_generic=0x7f06000a;
        /**  Do not translate.  Concise terminology for wifi with WEP security 
 Toast message when Wi-Fi cannot scan for networks 
 Do not translate.  Concise terminology for wifi with WEP security 
 Do not translate.  Concise terminology for wifi with WEP security 
 Do not translate.  Concise terminology for wifi with WEP security 
         */
        public static int wifi_security_short_wep=0x7f060006;
        /**  Do not translate.  Concise terminology for wifi with WPA security 
 Do not translate.  Concise terminology for wifi with WPA security 
 Do not translate.  Concise terminology for wifi with WPA security 
 Do not translate.  Concise terminology for wifi with WPA security 
         */
        public static int wifi_security_short_wpa=0x7f060007;
        /**  Do not translate.  Concise terminology for wifi with WPA2 security 
 Do not translate.  Concise terminology for wifi with WPA2 security 
 Do not translate.  Concise terminology for wifi with WPA2 security 
 Do not translate.  Concise terminology for wifi with WPA2 security 
         */
        public static int wifi_security_short_wpa2=0x7f060008;
        /**  Do not translate.  Concise terminology for wifi with both WPA/WPA2 security 
 Do not translate.  Concise terminology for wifi with both WPA/WPA2 security 
 Do not translate.  Concise terminology for wifi with both WPA/WPA2 security 
 Do not translate.  Concise terminology for wifi with both WPA/WPA2 security 
         */
        public static int wifi_security_short_wpa_wpa2=0x7f060009;
        /**  Do not translate.  Terminology for wifi with WEP security 
 Do not translate.  Terminology for wifi with WEP security 
         */
        public static int wifi_security_wep=0x7f06000d;
        /**  Do not translate.  Terminology for wifi with WPA security 
 Do not translate.  Terminology for wifi with WEP security 
 Do not translate.  Terminology for wifi with WPA security 
 Do not translate.  Terminology for wifi with WPA security 
         */
        public static int wifi_security_wpa=0x7f06000e;
        /**  Do not translate.  Terminology for wifi with WPA2 security 
 Do not translate.  Terminology for wifi with WPA2 security 
 Do not translate.  Terminology for wifi with WPA2 security 
         */
        public static int wifi_security_wpa2=0x7f06000f;
        /**  Do not translate.  Terminology for wifi with both WPA/WPA2 security, or unknown 
 Do not translate.  Terminology for wifi with both WPA/WPA2 security, or unknown 
 Do not translate.  Terminology for wifi with both WPA/WPA2 security, or unknown 
         */
        public static int wifi_security_wpa_wpa2=0x7f060010;
    }
    public static final class xml {
        public static int timezones=0x7f030000;
    }
}
